[alembic]
script_location = alembic
sqlalchemy.url = %(DATABASE_URL)s

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
EOF"

# 3) Patch env.py so Alembic "sees" your models metadata
docker exec devlog_backend sh -lc "python - << 'PY'
from pathlib import Path
p = Path('/app/alembic/env.py')
s = p.read_text()
# ensure imports
if 'from app.database import Base' not in s:
    s = s.replace('from alembic import context', 'from alembic import context\nfrom app.database import Base\nfrom app import models  # noqa: F401')
# set target_metadata
import re
s = re.sub(r'(?m)^target_metadata\s*=.*', 'target_metadata = Base.metadata', s)
p.write_text(s)
print('env.py patched OK')
PY"

docker exec -e DATABASE_URL="postgresql+psycopg2://devlog_user:devlog_pass@db:5432/devlog_db" \
  devlog_backend sh -lc 'cd /app && alembic revision --autogenerate -m "init" && alembic upgrade head'